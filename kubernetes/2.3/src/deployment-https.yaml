---
apiVersion: v1
kind: Secret
metadata:
  name: my-app-secret-tls
data:
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDekNDQWZPZ0F3SUJBZ0lVT3A2Vm5vTnVr
    ...
#   Ключ представлен не полностью
  tls.key: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZB
    ...
#   Ключ представлен не полностью
type: kubernetes.io/tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
spec:
  rules:
  - host: my-app.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: netology-svc
            port:
              number: 80
  tls:
    - hosts:
      - my-app.com
      secretName: my-app-secret-tls

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
data:
  key1: "18080"
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
    <title>Welcome to K8S ConfigMap!</title>
    <style>
        body {
            width: 35em;
            margin: 0 auto;
            font-family: Tahoma, Verdana, Arial, sans-serif;
        }
    </style>
    </head>
    <body>
    <h1>Welcome to K8S ConfigMap!</h1>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: netology-svc
spec:
  ports:
  - name: nginx-service
    port: 8000
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx-multitool

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-multitool
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-multitool
  template:
    metadata:
      labels:
        app: nginx-multitool
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 80
        volumeMounts:
          - name: index-html
            mountPath: /usr/share/nginx/html/
      - name: multitool
        image: wbitt/network-multitool
        ports:
        - containerPort: 8080
        env: 
        - name: HTTP_PORT
          valueFrom:
            configMapKeyRef:
              name: my-configmap
              key: key1
      volumes:
        - name: index-html
          configMap:
            name: my-configmap
            items:
              - key: index.html
                path: index.html
